---
- name: Download certbot apt key
  apt_key:
    id: '{{ letsencrypt_fp }}'
    keyserver: keyserver.ubuntu.com

- name: Add certbot PPA
  apt_repository:
    repo: ppa:certbot/certbot

- name: Fetch certbot apt key count
  shell:
    cmd: apt-key list 2>/dev/null | grep -c '^uid.*certbot'
  register: certbot_count
  changed_when: false

- name: Verify certbot apt key count
  assert:
    that:
      - (certbot_count.stdout | int) == 1

- name: Fetch certbot apt key
  shell:
    cmd: >
      apt-key list 2>/dev/null
      | grep -B1 '^uid.*certbot'
      | head -n 1
      | tr -d ' '
  register: observed_key
  changed_when: false

- name: Verify certbot apt key
  assert:
    that:
      - observed_key.stdout == letsencrypt_fp

- name: Install certbot
  apt:
    update_cache: true
    pkg:
      - certbot

- name: Compose certbot cmd
  set_fact:
    letsencrypt_cmd: >-
      certbot certonly -n --webroot -w {{ lighttpd_webroot }}/{{ lighttpd_letsencrypt_dir }}
      --agree-tos --email 'haas.josh.a@gmail.com'
      {{ letsencrypt.domains | map('regex_replace', '^(.*)$', '-d \1') | join(' ') }}

- name: Run certbot
  command:
    cmd: '{{ letsencrypt_cmd }}'

- name: Generate lets-renew script
  template:
    src: lets-renew.j2
    dest: '{{ cron_dir_root }}/lets-renew'
    owner: root
    group: root
    mode: '0744'
    lstrip_blocks: true

- name: Run lets-renew
  command:
    cmd: '{{ cron_dir_root }}/lets-renew'

- name: Register lets-renew cron
  cron:
    name: lets-renew
    job: '{{ cron_dir_root }}/lets-renew &> /dev/null'
    day: '1'
    hour: '{{ cron_stop | random(start=cron_start) }}'
    minute: '{{ 60 | random }}'

- name: Add SSL to lighttpd config
  import_tasks: lighttpd-write-config.yml
  tags:
    - server
    - letsencrypt
  vars:
    letsencrypt_done: true
  register: lighttpd_config

- name: Restart lighttpd
  service:
    name: lighttpd
    state: restarted
  when: lighttpd_config.changed | default(false)
