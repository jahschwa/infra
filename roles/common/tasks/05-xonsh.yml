---
- name: Install xonsh
  pip:
    name:
      - xonsh[full]

- name: Get python version
  command:
    cmd: python3 --version
  register: raw_python_version
  changed_when: False

- name: Parse python version
  set_fact:
    python_version: '{{ raw_python_version.stdout | regex_search("[0-9.]+$") }}'

- name: Create xonshrc dir
  file:
    path: ~/.config/xonsh/rc.d
    state: directory
  become: False

- name: Copy static .xonshrc
  copy:
    src: xonshrc_static.xsh
    dest: ~/.config/xonsh/rc.d/00_static.xsh
  become: False

- name: Generate dynamic .xonshrc
  template:
   src: xonshrc_ansible.j2
   dest: ~/.config/xonsh/rc.d/50_dynamic.xsh
   lstrip_blocks: True
  become: False

- name: Create empty user override .xonshrc
  copy:
    src: xonshrc_local.xsh
    dest: ~/.config/xonsh/rc.d/99_local.xsh
    force: False
  become: False

- name: Symlink user override .xonshrc
  file:
    path: ~/.xrc
    state: link
    src: .config/xonsh/rc.d/99_local.xsh
  become: False

- name: Find xonsh path
  command:
    cmd: which xonsh
  register: xonsh_path
  changed_when: False

- name: Add xonsh to shells
  lineinfile:
    path: /etc/shells
    regexp: '{{ xonsh_path.stdout }}'
    line: '{{ xonsh_path.stdout }}'

- name: Get current shell
  command:
    cmd: getent passwd {{ user }}
  register: raw_current_shell
  changed_when: False

- name: Set shell to xonsh
  command:
    cmd: 'chsh -s {{ xonsh_path.stdout }} {{ user }}'
  when: raw_current_shell.stdout.split(":")[-1] != xonsh_path.stdout
